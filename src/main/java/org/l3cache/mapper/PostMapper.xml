<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="PostMapper">
	<select id="selectRecentlyList" resultType="post">
		select 	P.post_id as pid, 
				P.title as title, 
				P.shopUrl as shopUrl,
				P.contents as contents,
				P.imgUrl as imgUrl, 
				P.price as price, 
				P.writeDate as writeDate, 
				U.email as writer, 
				count(L.L3_POSTS_post_id) as numLike,
				sum(if(L.L3_USERS_user_id= #{uid}, 1, 0)) as userLike
		from L3_POSTS AS P
            LEFT JOIN L3_USERS AS U
			ON P.write_user_id = U.user_id
			LEFT JOIN LIKE_POSTS AS L
			ON P.post_id = L.L3_POSTS_post_id group by P.post_id order by P.writeDate DESC LIMIT #{start},20;	
	</select>
	
	<insert id="create">
		insert into L3_POSTS (title,shopUrl,contents,imgUrl,price,write_user_id) values(#{title},#{shopUrl} ,#{contents},#{imgUrl},#{price},#{writer});
	</insert>
	
	<select id="selectOnePost" resultType="post">
		select 	P.post_id as pid, 
				P.title as title, 
				P.shopUrl as shopUrl,
				P.contents as contents,
				P.imgUrl as imgUrl, 
				P.price as price, 
				P.writeDate as writeDate, 
				U.email as writer, 
				P.read as read, 
				count(L.L3_POSTS_post_id) AS numLike 
		from L3_POSTS AS P
            LEFT JOIN L3_USERS AS U
			ON P.write_user_id = U.user_id
			LEFT JOIN LIKE_POSTS AS L 
			ON P.post_id = L.L3_POSTS_post_id where P.post_id=#{pid};
	</select>
	
	<update id="updateWithImage">
		update L3_POSTS set title=#{title}, shopUrl=#{shopUrl}, contents=#{contents}, imgUrl=#{imgUrl}, price=#{price} where post_id =#{pid};
	</update>
	
	<update id="updateWithoutImage">
		update L3_POSTS set title=#{title}, shopUrl=#{shopUrl}, contents=#{contents}, price=#{price} where post_id =#{pid};
	</update>
	
	<delete id="deletePost">
		delete from L3_POSTS where post_id=#{pid} and write_user_id =#{uid};
	</delete>
	
	<insert id="likePost">
		insert into LIKE_POSTS (L3_USERS_user_id, L3_POSTS_post_id) values(#{uid},#{pid});
	</insert>
	
	<delete id="unlikePost">
		delete from LIKE_POSTS where L3_POSTS_post_id=#{pid} and L3_USERS_user_id =#{uid};
	</delete>
	
	<update id="readPost">
		update L3_POSTS set post_read = post_read + 1 where post_id = #{pid};
	</update>
	
</mapper>